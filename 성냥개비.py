# 성냥개비의 개수가 주어졌을 때, 성냥개비를 모두 사용해서 만들 수 있는 가장 작은 수와 큰 수를 찾는 프로그램을 작성하시오.	

def solution(n):
	#             0  1  2  3  4  5  6  7  8  9
	sticks_for = [6, 2, 5, 5, 4, 5, 6, 3, 7, 6]
	dp = [-1] * (n + 1)
	#         0   1  2  3  4  5  6  7
	fixed = [-1, -1, 1, 7, 4, 2, 6, 8]

	for i in range(2, n + 1):
		if i <= 7:
			dp[i] = fixed[i]
		else:
			remainder = i % 7
			if remainder in [1, 2]:
				dp[i] = int('1' + str(dp[i - 2]).replace("6", "0").replace("28", "00"))
			elif remainder in [3, 4, 5]:
				dp[i] = int('2' + str(dp[i - 5]).replace("6", "0").replace("28", "00"))
			elif remainder == 6:
				dp[i] = int('6' + str(dp[i - 6]).replace("6", "0").replace("28", "00"))
			else:
				dp[i] = int('8' + str(dp[i - 7]).replace("6", "0").replace("28", "00"))
	temp = n
	if temp % 2 == 1:
		max_sticks = '7'
		temp -= 3
	else:
		max_sticks = ''
	max_sticks += '1' * (temp // 2)
	
	print(dp[n], int(max_sticks))

t = int(input())
for _ in range(t):
	solution(int(input()))

'''
4
3
6
7
15
'''

'''
7 7
6 111
8 711
108 7111111
'''

'''
2  -> 1   : 
3  -> 7   : 
4  -> 4   : 
5  -> 2   : 
6  -> 6   : 
7  -> 8   : 
8  -> 10  : 2칸 전으로 가서 맨 앞에 1 추가 후 6을 0으로 변경					나머지: 1
9  -> 18  : 2칸 전으로 가서 맨 앞에 1 추가								나머지: 2
10 -> 22  : 5칸 전으로 가서 맨 앞에 2 추가 (2칸 전은 두자릿수)				나머지: 3
11 -> 20  : 5칸 전으로 가서 맨 앞에 2 추가 후 6을 0으로 변경 (2칸 전은 두자릿수)	나머지: 4
12 -> 28  : 5칸 전으로 가서 맨 앞에 2 추가 (2칸 전은 두자릿수)				나머지: 5
13 -> 68  : 6칸 전으로 가서 맨 앞에 6 추가 (2칸, 5칸 전은 두자릿수)			나머지: 6
14 -> 88  : 7칸 전으로 가서 맨 앞에 8 추가 (2칸, 5칸, 6칸 전은 두자릿수)		나머지: 0
15 -> 108 : 2칸 전으로 가서 맨 앞에 1 추가 후 6을 0으로 변경
16 -> 188 : 2칸 전으로 가서 맨 앞에 1 추가
17 -> 228 : 5칸 전으로 가서 맨 앞에 2 추가 (2칸 전은 세자릿수)
18 -> 208 : 5칸 전으로 가서 맨 앞에 2 추가 후 6을 0으로 변경 (2칸 전은 세자릿수)
19 -> 288 : 5칸 전으로 가서 맨 앞에 2 추가 (2칸 전은 세자릿수)
20 -> 688 : 6칸 전으로 가서 맨 앞에 6 추가 (2칸, 5칸 전은 세자릿수)
21 -> 888 : 7칸 전으로 가서 맨 앞에 8 추가 (2칸, 5칸 6칸 전은 세자릿수)
22 -> 1088: 2칸 전으로 가서 맨 앞에 1 추가
'''